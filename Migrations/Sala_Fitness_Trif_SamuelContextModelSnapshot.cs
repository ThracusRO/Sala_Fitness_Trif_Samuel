// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sala_Fitness_Trif_Samuel.Data;

#nullable disable

namespace Sala_Fitness_Trif_Samuel.Migrations
{
    [DbContext(typeof(Sala_Fitness_Trif_SamuelContext))]
    partial class Sala_Fitness_Trif_SamuelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sala_Fitness_Trif_Samuel.Models.Abonament", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Durata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Pret")
                        .HasColumnType("int");

                    b.Property<int?>("TipAbonamentID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("TipAbonamentID");

                    b.ToTable("Abonament");
                });

            modelBuilder.Entity("Sala_Fitness_Trif_Samuel.Models.Antrenor", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SpecializareID")
                        .HasColumnType("int");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("SpecializareID");

                    b.ToTable("Antrenor");
                });

            modelBuilder.Entity("Sala_Fitness_Trif_Samuel.Models.Programare", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("AntrenorID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataProgramare")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DurataMinute")
                        .HasColumnType("int");

                    b.Property<int?>("UtilizatorID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AntrenorID");

                    b.HasIndex("UtilizatorID");

                    b.ToTable("Programare");
                });

            modelBuilder.Entity("Sala_Fitness_Trif_Samuel.Models.Specializare", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Denumire")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Specializare");
                });

            modelBuilder.Entity("Sala_Fitness_Trif_Samuel.Models.TipAbonament", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Denumire")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("TipAbonament");
                });

            modelBuilder.Entity("Sala_Fitness_Trif_Samuel.Models.Utilizator", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("AbonamentID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataNasterii")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefon")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("AbonamentID");

                    b.ToTable("Utilizator");
                });

            modelBuilder.Entity("Sala_Fitness_Trif_Samuel.Models.Abonament", b =>
                {
                    b.HasOne("Sala_Fitness_Trif_Samuel.Models.TipAbonament", "TipAbonament")
                        .WithMany()
                        .HasForeignKey("TipAbonamentID");

                    b.Navigation("TipAbonament");
                });

            modelBuilder.Entity("Sala_Fitness_Trif_Samuel.Models.Antrenor", b =>
                {
                    b.HasOne("Sala_Fitness_Trif_Samuel.Models.Specializare", "Specializare")
                        .WithMany()
                        .HasForeignKey("SpecializareID");

                    b.Navigation("Specializare");
                });

            modelBuilder.Entity("Sala_Fitness_Trif_Samuel.Models.Programare", b =>
                {
                    b.HasOne("Sala_Fitness_Trif_Samuel.Models.Antrenor", "Antrenor")
                        .WithMany()
                        .HasForeignKey("AntrenorID");

                    b.HasOne("Sala_Fitness_Trif_Samuel.Models.Utilizator", "Utilizator")
                        .WithMany()
                        .HasForeignKey("UtilizatorID");

                    b.Navigation("Antrenor");

                    b.Navigation("Utilizator");
                });

            modelBuilder.Entity("Sala_Fitness_Trif_Samuel.Models.Utilizator", b =>
                {
                    b.HasOne("Sala_Fitness_Trif_Samuel.Models.Abonament", "Abonament")
                        .WithMany()
                        .HasForeignKey("AbonamentID");

                    b.Navigation("Abonament");
                });
#pragma warning restore 612, 618
        }
    }
}
